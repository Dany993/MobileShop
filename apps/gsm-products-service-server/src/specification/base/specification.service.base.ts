/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Specification as PrismaSpecification } from "@prisma/client";

export class SpecificationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SpecificationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.specification.count(args);
  }

  async specifications(
    args: Prisma.SpecificationFindManyArgs
  ): Promise<PrismaSpecification[]> {
    return this.prisma.specification.findMany(args);
  }
  async specification(
    args: Prisma.SpecificationFindUniqueArgs
  ): Promise<PrismaSpecification | null> {
    return this.prisma.specification.findUnique(args);
  }
  async createSpecification(
    args: Prisma.SpecificationCreateArgs
  ): Promise<PrismaSpecification> {
    return this.prisma.specification.create(args);
  }
  async updateSpecification(
    args: Prisma.SpecificationUpdateArgs
  ): Promise<PrismaSpecification> {
    return this.prisma.specification.update(args);
  }
  async deleteSpecification(
    args: Prisma.SpecificationDeleteArgs
  ): Promise<PrismaSpecification> {
    return this.prisma.specification.delete(args);
  }
}
